Timer unit: 1e-06 s

Total time: 2648.77 s
File: /home2/gururang/ccpy/ccpy/cc/ccsdt_p_v2.py
Function: update at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def update(T, dT, H, shift, flag_RHF, system, pspace):
    13                                           
    14                                               # update T1
    15        10   18795019.0 1879501.9      0.7      T, dT = update_t1a(T, dT, H, shift)
    16        10         12.0      1.2      0.0      if flag_RHF:
    17                                                   T.b = T.a.copy()
    18                                                   dT.b = dT.a.copy()
    19                                               else:
    20        10   22026929.0 2202692.9      0.8          T, dT = update_t1b(T, dT, H, shift)
    21                                           
    22                                               # CCS intermediates
    23        10   12742869.0 1274286.9      0.5      hbar = get_ccs_intermediates_opt(T, H)
    24                                           
    25                                               # update T2
    26        10  115662049.0 11566204.9      4.4      T, dT = update_t2a(T, dT, hbar, H, shift)
    27        10  237153173.0 23715317.3      9.0      T, dT = update_t2b(T, dT, hbar, H, shift)
    28        10          8.0      0.8      0.0      if flag_RHF:
    29                                                   T.bb = T.aa.copy()
    30                                                   dT.bb = dT.aa.copy()
    31                                               else:
    32        10   92063043.0 9206304.3      3.5          T, dT = update_t2c(T, dT, hbar, H, shift)
    33                                           
    34                                               # CCSD intermediates
    35                                               #[TODO]: Should accept CCS HBar as input and build only terms with T2 in it
    36        10   95296628.0 9529662.8      3.6      hbar = get_ccsd_intermediates(T, H)
    37                                           
    38                                               # update T3
    39        10  300502457.0 30050245.7     11.3      T, dT = update_t3a(T, dT, hbar, H, shift, pspace[0]['aaa'])
    40        10  748088530.0 74808853.0     28.2      T, dT = update_t3b(T, dT, hbar, H, shift, pspace[0]['aab'])
    41        10         10.0      1.0      0.0      if flag_RHF:
    42                                                   T.abb = np.transpose(T.aab, (2, 1, 0, 5, 4, 3))
    43                                                   dT.abb = np.transpose(dT.abb, (2, 1, 0, 5, 4, 3))
    44                                                   T.bbb = T.aaa.copy()
    45                                                   dT.bbb = dT.aaa.copy()
    46                                               else:
    47        10  736802737.0 73680273.7     27.8          T, dT = update_t3c(T, dT, hbar, H, shift, pspace[0]['abb'])
    48        10  269635403.0 26963540.3     10.2          T, dT = update_t3d(T, dT, hbar, H, shift, pspace[0]['bbb'])
    49                                           
    50        10          7.0      0.7      0.0      return T, dT

Total time: 18.793 s
File: /home2/gururang/ccpy/ccpy/cc/ccsdt_p_v2.py
Function: update_t1a at line 52

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    52                                           @profile
    53                                           def update_t1a(T, dT, H, shift):
    54                                               """
    55                                               Update t1a amplitudes by calculating the projection <ia|(H_N e^(T1+T2+T3))_C|0>.
    56                                               """
    57        10        505.0     50.5      0.0      chi1A_vv = H.a.vv.copy()
    58        10      61861.0   6186.1      0.3      chi1A_vv += np.einsum("anef,fn->ae", H.aa.vovv, T.a, optimize=True)
    59        10      93180.0   9318.0      0.5      chi1A_vv += np.einsum("anef,fn->ae", H.ab.vovv, T.b, optimize=True)
    60                                           
    61        10        143.0     14.3      0.0      chi1A_oo = H.a.oo.copy()
    62        10       4394.0    439.4      0.0      chi1A_oo += np.einsum("mnif,fn->mi", H.aa.ooov, T.a, optimize=True)
    63        10       3526.0    352.6      0.0      chi1A_oo += np.einsum("mnif,fn->mi", H.ab.ooov, T.b, optimize=True)
    64                                           
    65        10         66.0      6.6      0.0      h1A_ov = H.a.ov.copy()
    66        10       7235.0    723.5      0.0      h1A_ov += np.einsum("mnef,fn->me", H.aa.oovv, T.a, optimize=True)
    67        10      10439.0   1043.9      0.1      h1A_ov += np.einsum("mnef,fn->me", H.ab.oovv, T.b, optimize=True)
    68                                           
    69        10        114.0     11.4      0.0      h1B_ov = H.b.ov.copy()
    70        10      11568.0   1156.8      0.1      h1B_ov += np.einsum("nmfe,fn->me", H.ab.oovv, T.a, optimize=True)
    71        10       7922.0    792.2      0.0      h1B_ov += np.einsum("mnef,fn->me", H.bb.oovv, T.b, optimize=True)
    72                                           
    73        10         38.0      3.8      0.0      h1A_oo = chi1A_oo.copy()
    74        10       4049.0    404.9      0.0      h1A_oo += np.einsum("me,ei->mi", h1A_ov, T.a, optimize=True)
    75                                           
    76        10      19560.0   1956.0      0.1      h2A_ooov = H.aa.ooov + np.einsum("mnfe,fi->mnie", H.aa.oovv, T.a, optimize=True)
    77        10      13653.0   1365.3      0.1      h2B_ooov = H.ab.ooov + np.einsum("mnfe,fi->mnie", H.ab.oovv, T.a, optimize=True)
    78        10     409135.0  40913.5      2.2      h2A_vovv = H.aa.vovv - np.einsum("mnfe,an->amef", H.aa.oovv, T.a, optimize=True)
    79        10     342021.0  34202.1      1.8      h2B_vovv = H.ab.vovv - np.einsum("nmef,an->amef", H.ab.oovv, T.a, optimize=True)
    80                                           
    81        10       5852.0    585.2      0.0      dT.a = -np.einsum("mi,am->ai", h1A_oo, T.a, optimize=True)
    82        10       4716.0    471.6      0.0      dT.a += np.einsum("ae,ei->ai", chi1A_vv, T.a, optimize=True)
    83        10      10298.0   1029.8      0.1      dT.a += np.einsum("anif,fn->ai", H.aa.voov, T.a, optimize=True)
    84        10      10151.0   1015.1      0.1      dT.a += np.einsum("anif,fn->ai", H.ab.voov, T.b, optimize=True)
    85        10      10789.0   1078.9      0.1      dT.a += np.einsum("me,aeim->ai", h1A_ov, T.aa, optimize=True)
    86        10      12321.0   1232.1      0.1      dT.a += np.einsum("me,aeim->ai", h1B_ov, T.ab, optimize=True)
    87        10      24918.0   2491.8      0.1      dT.a -= 0.5 * np.einsum("mnif,afmn->ai", h2A_ooov, T.aa, optimize=True)
    88        10      24848.0   2484.8      0.1      dT.a -= np.einsum("mnif,afmn->ai", h2B_ooov, T.ab, optimize=True)
    89        10     194633.0  19463.3      1.0      dT.a += 0.5 * np.einsum("anef,efin->ai", h2A_vovv, T.aa, optimize=True)
    90        10     192385.0  19238.5      1.0      dT.a += np.einsum("anef,efin->ai", h2B_vovv, T.ab, optimize=True)
    91                                               # T3 parts
    92        10    5771063.0 577106.3     30.7      dT.a += 0.25 * np.einsum("mnef,aefimn->ai", H.aa.oovv, T.aaa, optimize=True)
    93        10    5765951.0 576595.1     30.7      dT.a += np.einsum("mnef,aefimn->ai", H.ab.oovv, T.aab, optimize=True)
    94        10    5774715.0 577471.5     30.7      dT.a += 0.25 * np.einsum("mnef,aefimn->ai", H.bb.oovv, T.abb, optimize=True)
    95                                           
    96        20        706.0     35.3      0.0      T.a, dT.a = cc_loops2.cc_loops2.update_t1a(
    97        10         26.0      2.6      0.0          T.a,
    98        10        175.0     17.5      0.0          dT.a + H.a.vo,
    99        10         18.0      1.8      0.0          H.a.oo,
   100        10         18.0      1.8      0.0          H.a.vv,
   101        10         16.0      1.6      0.0          shift,
   102                                               )
   103        10         14.0      1.4      0.0      return T, dT

Total time: 22.0248 s
File: /home2/gururang/ccpy/ccpy/cc/ccsdt_p_v2.py
Function: update_t1b at line 105

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   105                                           @profile
   106                                           def update_t1b(T, dT, H, shift):
   107                                               """
   108                                               Update t1b amplitudes by calculating the projection <i~a~|(H_N e^(T1+T2+T3))_C|0>.
   109                                               """
   110                                               # Intermediates
   111        10        360.0     36.0      0.0      chi1B_vv = H.b.vv.copy()
   112        10      63177.0   6317.7      0.3      chi1B_vv += np.einsum("anef,fn->ae", H.bb.vovv, T.b, optimize=True)
   113        10     125830.0  12583.0      0.6      chi1B_vv += np.einsum("nafe,fn->ae", H.ab.ovvv, T.a, optimize=True)
   114                                           
   115        10         87.0      8.7      0.0      chi1B_oo = H.b.oo.copy()
   116        10       3104.0    310.4      0.0      chi1B_oo += np.einsum("mnif,fn->mi", H.bb.ooov, T.b, optimize=True)
   117        10       4403.0    440.3      0.0      chi1B_oo += np.einsum("nmfi,fn->mi", H.ab.oovo, T.a, optimize=True)
   118                                           
   119        10         69.0      6.9      0.0      h1A_ov = H.a.ov.copy()
   120        10       6754.0    675.4      0.0      h1A_ov += np.einsum("mnef,fn->me", H.aa.oovv, T.a, optimize=True)
   121        10      10807.0   1080.7      0.0      h1A_ov += np.einsum("mnef,fn->me", H.ab.oovv, T.b, optimize=True)
   122                                           
   123        10         80.0      8.0      0.0      h1B_ov = H.b.ov.copy()
   124        10      10304.0   1030.4      0.0      h1B_ov += np.einsum("nmfe,fn->me", H.ab.oovv, T.a, optimize=True)
   125        10       7396.0    739.6      0.0      h1B_ov += np.einsum("mnef,fn->me", H.bb.oovv, T.b, optimize=True)
   126                                           
   127        10       3629.0    362.9      0.0      h1B_oo = chi1B_oo + np.einsum("me,ei->mi", h1B_ov, T.b, optimize=True)
   128                                           
   129        10      17323.0   1732.3      0.1      h2C_ooov = H.bb.ooov + np.einsum("mnfe,fi->mnie", H.bb.oovv, T.b, optimize=True)
   130        10      15125.0   1512.5      0.1      h2B_oovo = H.ab.oovo + np.einsum("nmef,fi->nmei", H.ab.oovv, T.b, optimize=True)
   131        10     372348.0  37234.8      1.7      h2C_vovv = H.bb.vovv - np.einsum("mnfe,an->amef", H.bb.oovv, T.b, optimize=True)
   132        10     354264.0  35426.4      1.6      h2B_ovvv = H.ab.ovvv - np.einsum("mnfe,an->mafe", H.ab.oovv, T.b, optimize=True)
   133                                           
   134        10       5557.0    555.7      0.0      dT.b = -np.einsum("mi,am->ai", h1B_oo, T.b, optimize=True)
   135        10       4561.0    456.1      0.0      dT.b += np.einsum("ae,ei->ai", chi1B_vv, T.b, optimize=True)
   136        10      10638.0   1063.8      0.0      dT.b += np.einsum("anif,fn->ai", H.bb.voov, T.b, optimize=True)
   137        10      26024.0   2602.4      0.1      dT.b += np.einsum("nafi,fn->ai", H.ab.ovvo, T.a, optimize=True)
   138        10       7962.0    796.2      0.0      dT.b += np.einsum("me,eami->ai", h1A_ov, T.ab, optimize=True)
   139        10      12459.0   1245.9      0.1      dT.b += np.einsum("me,aeim->ai", h1B_ov, T.bb, optimize=True)
   140        10      24053.0   2405.3      0.1      dT.b -= 0.5 * np.einsum("mnif,afmn->ai", h2C_ooov, T.bb, optimize=True)
   141        10      18491.0   1849.1      0.1      dT.b -= np.einsum("nmfi,fanm->ai", h2B_oovo, T.ab, optimize=True)
   142        10     194020.0  19402.0      0.9      dT.b += 0.5 * np.einsum("anef,efin->ai", h2C_vovv, T.bb, optimize=True)
   143        10     264129.0  26412.9      1.2      dT.b += np.einsum("nafe,feni->ai", h2B_ovvv, T.ab, optimize=True)
   144                                               # T3 parts
   145        10    5783272.0 578327.2     26.3      dT.b += 0.25 * np.einsum("mnef,aefimn->ai", H.bb.oovv, T.bbb, optimize=True)
   146        10    6277373.0 627737.3     28.5      dT.b += 0.25 * np.einsum("mnef,efamni->ai", H.aa.oovv, T.aab, optimize=True)
   147        10    8400421.0 840042.1     38.1      dT.b += np.einsum("mnef,efamni->ai", H.ab.oovv, T.abb, optimize=True)
   148                                           
   149        20        522.0     26.1      0.0      T.b, dT.b = cc_loops2.cc_loops2.update_t1b(
   150        10         17.0      1.7      0.0          T.b,
   151        10        206.0     20.6      0.0          dT.b + H.b.vo,
   152        10         13.0      1.3      0.0          H.b.oo,
   153        10         16.0      1.6      0.0          H.b.vv,
   154        10         11.0      1.1      0.0          shift,
   155                                               )
   156        10         13.0      1.3      0.0      return T, dT

Total time: 115.66 s
File: /home2/gururang/ccpy/ccpy/cc/ccsdt_p_v2.py
Function: update_t2a at line 158

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   158                                           @profile
   159                                           def update_t2a(T, dT, H, H0, shift):
   160                                               """
   161                                               Update t2a amplitudes by calculating the projection <ijab|(H_N e^(T1+T2))_C|0>.
   162                                               """
   163                                               # intermediates
   164        10         11.0      1.1      0.0      I1A_oo = (
   165        30        326.0     10.9      0.0          H.a.oo
   166        10      48483.0   4848.3      0.0          + 0.5 * np.einsum("mnef,efin->mi", H.aa.oovv, T.aa, optimize=True)
   167        10      35908.0   3590.8      0.0          + np.einsum("mnef,efin->mi", H.ab.oovv, T.ab, optimize=True)
   168                                               )
   169                                           
   170        10         15.0      1.5      0.0      I1A_vv = (
   171        30        433.0     14.4      0.0          H.a.vv
   172        10      52886.0   5288.6      0.0          - 0.5 * np.einsum("mnef,afmn->ae", H.aa.oovv, T.aa, optimize=True)
   173        10      51678.0   5167.8      0.0          - np.einsum("mnef,afmn->ae", H.ab.oovv, T.ab, optimize=True)
   174                                               )
   175                                           
   176        10         19.0      1.9      0.0      I2A_voov = (
   177        30      12046.0    401.5      0.0          H.aa.voov
   178        10     182698.0  18269.8      0.2          + 0.5 * np.einsum("mnef,afin->amie", H.aa.oovv, T.aa, optimize=True)
   179        10     180998.0  18099.8      0.2          + np.einsum("mnef,afin->amie", H.ab.oovv, T.ab, optimize=True)
   180                                               )
   181                                           
   182        20      29685.0   1484.2      0.0      I2A_oooo = H.aa.oooo + 0.5 * np.einsum(
   183        10         25.0      2.5      0.0          "mnef,efij->mnij", H.aa.oovv, T.aa, optimize=True
   184                                               )
   185                                           
   186        20     191807.0   9590.4      0.2      I2B_voov = H.ab.voov + 0.5 * np.einsum(
   187        10         26.0      2.6      0.0          "mnef,afin->amie", H.bb.oovv, T.ab, optimize=True
   188                                               )
   189                                           
   190        10     640657.0  64065.7      0.6      I2A_vooo = H.aa.vooo + 0.5*np.einsum('anef,efij->anij', H0.aa.vovv + 0.5 * H.aa.vovv, T.aa, optimize=True)
   191                                           
   192        10      34208.0   3420.8      0.0      tau = 0.5 * T.aa + np.einsum('ai,bj->abij', T.a, T.a, optimize=True)
   193                                           
   194        10      16423.0   1642.3      0.0      dT.aa = -0.5 * np.einsum("amij,bm->abij", I2A_vooo, T.a, optimize=True)
   195        10     103487.0  10348.7      0.1      dT.aa += 0.5 * np.einsum("abie,ej->abij", H.aa.vvov, T.a, optimize=True)
   196        10      43614.0   4361.4      0.0      dT.aa += 0.5 * np.einsum("ae,ebij->abij", I1A_vv, T.aa, optimize=True)
   197        10      43583.0   4358.3      0.0      dT.aa -= 0.5 * np.einsum("mi,abmj->abij", I1A_oo, T.aa, optimize=True)
   198        10     180008.0  18000.8      0.2      dT.aa += np.einsum("amie,ebmj->abij", I2A_voov, T.aa, optimize=True)
   199        10     188932.0  18893.2      0.2      dT.aa += np.einsum("amie,bejm->abij", I2B_voov, T.ab, optimize=True)
   200        10    2231058.0 223105.8      1.9      dT.aa += 0.25 * np.einsum("abef,efij->abij", H.aa.vvvv, tau, optimize=True)
   201        10      53908.0   5390.8      0.0      dT.aa += 0.125 * np.einsum("mnij,abmn->abij", I2A_oooo, T.aa, optimize=True)
   202                                               # T3 parts
   203        10    2734582.0 273458.2      2.4      dT.aa += 0.25 * np.einsum("me,abeijm->abij", H.a.ov, T.aaa, optimize=True)
   204        10    2733942.0 273394.2      2.4      dT.aa += 0.25 * np.einsum("me,abeijm->abij", H.b.ov, T.aab, optimize=True)
   205        10   27077778.0 2707777.8     23.4      dT.aa -= 0.5 * np.einsum("mnif,abfmjn->abij", H0.ab.ooov + H.ab.ooov, T.aab, optimize=True)
   206        10   27114908.0 2711490.8     23.4      dT.aa -= 0.25 * np.einsum("mnif,abfmjn->abij", H0.aa.ooov + H.aa.ooov, T.aaa, optimize=True)
   207        10   25813596.0 2581359.6     22.3      dT.aa += 0.25 * np.einsum("anef,ebfijn->abij", H0.aa.vovv + H.aa.vovv, T.aaa, optimize=True)
   208        10   25785280.0 2578528.0     22.3      dT.aa += 0.5 * np.einsum("anef,ebfijn->abij", H0.ab.vovv + H.ab.vovv, T.aab, optimize=True)
   209                                           
   210        20      42923.0   2146.2      0.0      T.aa, dT.aa = cc_loops2.cc_loops2.update_t2a(
   211        10      34361.0   3436.1      0.0          T.aa, dT.aa + 0.25 * H0.aa.vvoo, H0.a.oo, H0.a.vv, shift
   212                                               )
   213        10         18.0      1.8      0.0      return T, dT

Total time: 237.15 s
File: /home2/gururang/ccpy/ccpy/cc/ccsdt_p_v2.py
Function: update_t2b at line 216

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   216                                           @profile
   217                                           def update_t2b(T, dT, H, H0, shift):
   218                                               """
   219                                               Update t2b amplitudes by calculating the projection <ij~ab~|(H_N e^(T1+T2))_C|0>.
   220                                               """
   221                                               # intermediates
   222        10         16.0      1.6      0.0      I1A_vv = (
   223        30        405.0     13.5      0.0          H.a.vv
   224        10      51874.0   5187.4      0.0          - 0.5 * np.einsum("mnef,afmn->ae", H.aa.oovv, T.aa, optimize=True)
   225        10      54294.0   5429.4      0.0          - np.einsum("mnef,afmn->ae", H.ab.oovv, T.ab, optimize=True)
   226                                               )
   227                                           
   228        10         16.0      1.6      0.0      I1B_vv = (
   229        30        318.0     10.6      0.0          H.b.vv
   230        10      38626.0   3862.6      0.0          - np.einsum("nmfe,fbnm->be", H.ab.oovv, T.ab, optimize=True)
   231        10      46259.0   4625.9      0.0          - 0.5 * np.einsum("mnef,fbnm->be", H.bb.oovv, T.bb, optimize=True)
   232                                               )
   233                                           
   234        10         14.0      1.4      0.0      I1A_oo = (
   235        30        312.0     10.4      0.0          H.a.oo
   236        10      39988.0   3998.8      0.0          + 0.5 * np.einsum("mnef,efin->mi", H.aa.oovv, T.aa, optimize=True)
   237        10      28047.0   2804.7      0.0          + np.einsum("mnef,efin->mi", H.ab.oovv, T.ab, optimize=True)
   238                                               )
   239                                           
   240        10         16.0      1.6      0.0      I1B_oo = (
   241        30        275.0      9.2      0.0          H.b.oo
   242        10      24094.0   2409.4      0.0          + np.einsum("nmfe,fenj->mj", H.ab.oovv, T.ab, optimize=True)
   243        10      40054.0   4005.4      0.0          + 0.5 * np.einsum("mnef,efjn->mj", H.bb.oovv, T.bb, optimize=True)
   244                                               )
   245                                           
   246        10         23.0      2.3      0.0      I2A_voov = (
   247        30      12139.0    404.6      0.0          H.aa.voov
   248        10     175227.0  17522.7      0.1          + np.einsum("mnef,aeim->anif", H.aa.oovv, T.aa, optimize=True)
   249        10     179977.0  17997.7      0.1          + np.einsum("nmfe,aeim->anif", H.ab.oovv, T.ab, optimize=True)
   250                                               )
   251                                           
   252        10         22.0      2.2      0.0      I2B_voov = (
   253        30      12100.0    403.3      0.0          H.ab.voov
   254        10     175131.0  17513.1      0.1          + np.einsum("mnef,aeim->anif", H.ab.oovv, T.aa, optimize=True)
   255        10     176337.0  17633.7      0.1          + np.einsum("mnef,aeim->anif", H.bb.oovv, T.ab, optimize=True)
   256                                               )
   257                                           
   258        10      36223.0   3622.3      0.0      I2B_oooo = H.ab.oooo + np.einsum("mnef,efij->mnij", H.ab.oovv, T.ab, optimize=True)
   259                                           
   260        10     188662.0  18866.2      0.1      I2B_vovo = H.ab.vovo - np.einsum("mnef,afmj->anej", H.ab.oovv, T.ab, optimize=True)
   261                                           
   262        10     544837.0  54483.7      0.2      I2B_ovoo = H.ab.ovoo + np.einsum("maef,efij->maij", H0.ab.ovvv + 0.5 * H.ab.ovvv, T.ab, optimize=True)
   263        10     377007.0  37700.7      0.2      I2B_vooo = H.ab.vooo + np.einsum("amef,efij->amij", H0.ab.vovv + 0.5 * H.ab.vovv, T.ab, optimize=True)
   264                                           
   265        10      22093.0   2209.3      0.0      tau = T.ab + np.einsum('ai,bj->abij', T.a, T.b, optimize=True)
   266                                           
   267        10      24078.0   2407.8      0.0      dT.ab = -np.einsum("mbij,am->abij", I2B_ovoo, T.a, optimize=True)
   268        10      22613.0   2261.3      0.0      dT.ab -= np.einsum("amij,bm->abij", I2B_vooo, T.b, optimize=True)
   269        10     269308.0  26930.8      0.1      dT.ab += np.einsum("abej,ei->abij", H.ab.vvvo, T.a, optimize=True)
   270        10      85198.0   8519.8      0.0      dT.ab += np.einsum("abie,ej->abij", H.ab.vvov, T.b, optimize=True)
   271        10      45457.0   4545.7      0.0      dT.ab += np.einsum("ae,ebij->abij", I1A_vv, T.ab, optimize=True)
   272        10      42775.0   4277.5      0.0      dT.ab += np.einsum("be,aeij->abij", I1B_vv, T.ab, optimize=True)
   273        10      24730.0   2473.0      0.0      dT.ab -= np.einsum("mi,abmj->abij", I1A_oo, T.ab, optimize=True)
   274        10      22143.0   2214.3      0.0      dT.ab -= np.einsum("mj,abim->abij", I1B_oo, T.ab, optimize=True)
   275        10     188329.0  18832.9      0.1      dT.ab += np.einsum("amie,ebmj->abij", I2A_voov, T.ab, optimize=True)
   276        10     187868.0  18786.8      0.1      dT.ab += np.einsum("amie,ebmj->abij", I2B_voov, T.bb, optimize=True)
   277        10     191865.0  19186.5      0.1      dT.ab += np.einsum("mbej,aeim->abij", H.ab.ovvo, T.aa, optimize=True)
   278        10     195873.0  19587.3      0.1      dT.ab += np.einsum("bmje,aeim->abij", H.bb.voov, T.ab, optimize=True)
   279        10     187524.0  18752.4      0.1      dT.ab -= np.einsum("mbie,aemj->abij", H.ab.ovov, T.ab, optimize=True)
   280        10     188293.0  18829.3      0.1      dT.ab -= np.einsum("amej,ebim->abij", I2B_vovo, T.ab, optimize=True)
   281        10      40836.0   4083.6      0.0      dT.ab += np.einsum("mnij,abmn->abij", I2B_oooo, T.ab, optimize=True)
   282        10    3969180.0 396918.0      1.7      dT.ab += np.einsum("abef,efij->abij", H.ab.vvvv, tau, optimize=True)
   283                                               # T3 parts
   284        10   26871387.0 2687138.7     11.3      dT.ab -= 0.5 * np.einsum("mnif,afbmnj->abij", H0.aa.ooov + H.aa.ooov, T.aab, optimize=True)
   285        10   23051342.0 2305134.2      9.7      dT.ab -= np.einsum("nmfj,afbinm->abij", H0.ab.oovo + H.ab.oovo, T.aab, optimize=True)
   286        10   23048682.0 2304868.2      9.7      dT.ab -= 0.5 * np.einsum("mnjf,afbinm->abij", H0.bb.ooov + H.bb.ooov, T.abb, optimize=True)
   287        10   26879636.0 2687963.6     11.3      dT.ab -= np.einsum("mnif,afbmnj->abij", H0.ab.ooov + H.ab.ooov, T.abb, optimize=True)
   288        10   24063178.0 2406317.8     10.1      dT.ab += 0.5 * np.einsum("anef,efbinj->abij", H0.aa.vovv + H.aa.vovv, T.aab, optimize=True)
   289        10   23991773.0 2399177.3     10.1      dT.ab += np.einsum("anef,efbinj->abij", H0.ab.vovv + H.ab.vovv, T.abb, optimize=True)
   290        10   37278377.0 3727837.7     15.7      dT.ab += np.einsum("nbfe,afeinj->abij", H0.ab.ovvv + H.ab.ovvv, T.aab, optimize=True)
   291        10   37220336.0 3722033.6     15.7      dT.ab += 0.5 * np.einsum("bnef,afeinj->abij", H0.bb.vovv + H.bb.vovv, T.abb, optimize=True)
   292        10    3388845.0 338884.5      1.4      dT.ab += np.einsum("me,aebimj->abij", H.a.ov, T.aab, optimize=True)
   293        10    3388223.0 338822.3      1.4      dT.ab += np.einsum("me,aebimj->abij", H.b.ov, T.abb, optimize=True)
   294                                           
   295        20      31159.0   1558.0      0.0      T.ab, dT.ab = cc_loops2.cc_loops2.update_t2b(
   296        10      26736.0   2673.6      0.0          T.ab, dT.ab + H0.ab.vvoo, H0.a.oo, H0.a.vv, H0.b.oo, H0.b.vv, shift
   297                                               )
   298        10         18.0      1.8      0.0      return T, dT

Total time: 92.0612 s
File: /home2/gururang/ccpy/ccpy/cc/ccsdt_p_v2.py
Function: update_t2c at line 300

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   300                                           @profile
   301                                           def update_t2c(T, dT, H, H0, shift):
   302                                               """
   303                                               Update t2c amplitudes by calculating the projection <i~j~a~b~|(H_N e^(T1+T2))_C|0>.
   304                                               """
   305                                               # intermediates
   306        10         17.0      1.7      0.0      I1B_oo = (
   307        30        317.0     10.6      0.0          H.b.oo
   308        10      47736.0   4773.6      0.1          + 0.5 * np.einsum("mnef,efin->mi", H.bb.oovv, T.bb, optimize=True)
   309        10      32571.0   3257.1      0.0          + np.einsum("nmfe,feni->mi", H.ab.oovv, T.ab, optimize=True)
   310                                               )
   311                                           
   312        10         16.0      1.6      0.0      I1B_vv = (
   313        30        592.0     19.7      0.0          H.b.vv
   314        10      52289.0   5228.9      0.1          - 0.5 * np.einsum("mnef,afmn->ae", H.bb.oovv, T.bb, optimize=True)
   315        10      37721.0   3772.1      0.0          - np.einsum("nmfe,fanm->ae", H.ab.oovv, T.ab, optimize=True)
   316                                               )
   317                                           
   318        20      28017.0   1400.8      0.0      I2C_oooo = H.bb.oooo + 0.5 * np.einsum(
   319        10         22.0      2.2      0.0          "mnef,efij->mnij", H.bb.oovv, T.bb, optimize=True
   320                                               )
   321                                           
   322        10         23.0      2.3      0.0      I2B_ovvo = (
   323        30      20332.0    677.7      0.0          H.ab.ovvo
   324        10     177027.0  17702.7      0.2          + np.einsum("mnef,afin->maei", H.ab.oovv, T.bb, optimize=True)
   325        10     175157.0  17515.7      0.2          + 0.5 * np.einsum("mnef,fani->maei", H.aa.oovv, T.ab, optimize=True)
   326                                               )
   327                                           
   328        20     190970.0   9548.5      0.2      I2C_voov = H.bb.voov + 0.5 * np.einsum(
   329        10         25.0      2.5      0.0          "mnef,afin->amie", H.bb.oovv, T.bb, optimize=True
   330                                               )
   331                                           
   332        10     642872.0  64287.2      0.7      I2C_vooo = H.bb.vooo + 0.5*np.einsum('anef,efij->anij', H0.bb.vovv + 0.5 * H.bb.vovv, T.bb, optimize=True)
   333                                           
   334        10      33809.0   3380.9      0.0      tau = 0.5 * T.bb + np.einsum('ai,bj->abij', T.b, T.b, optimize=True)
   335                                           
   336        10      17896.0   1789.6      0.0      dT.bb = -0.5 * np.einsum("amij,bm->abij", I2C_vooo, T.b, optimize=True)
   337        10     366144.0  36614.4      0.4      dT.bb += 0.5 * np.einsum("abie,ej->abij", H.bb.vvov, T.b, optimize=True)
   338        10      46811.0   4681.1      0.1      dT.bb += 0.5 * np.einsum("ae,ebij->abij", I1B_vv, T.bb, optimize=True)
   339        10      45778.0   4577.8      0.0      dT.bb -= 0.5 * np.einsum("mi,abmj->abij", I1B_oo, T.bb, optimize=True)
   340        10     180837.0  18083.7      0.2      dT.bb += np.einsum("amie,ebmj->abij", I2C_voov, T.bb, optimize=True)
   341        10     186045.0  18604.5      0.2      dT.bb += np.einsum("maei,ebmj->abij", I2B_ovvo, T.ab, optimize=True)
   342        10    2243536.0 224353.6      2.4      dT.bb += 0.25 * np.einsum("abef,efij->abij", H.bb.vvvv, tau, optimize=True)
   343        10      54036.0   5403.6      0.1      dT.bb += 0.125 * np.einsum("mnij,abmn->abij", I2C_oooo, T.bb, optimize=True)
   344                                               # T3 parts
   345        10    2372295.0 237229.5      2.6      dT.bb += 0.25 * np.einsum("me,eabmij->abij", H.a.ov, T.abb, optimize=True)
   346        10    2754711.0 275471.1      3.0      dT.bb += 0.25 * np.einsum("me,abeijm->abij", H.b.ov, T.bbb, optimize=True)
   347        10   25803720.0 2580372.0     28.0      dT.bb += 0.25 * np.einsum("anef,ebfijn->abij", H0.bb.vovv + H.bb.vovv, T.bbb, optimize=True)
   348        10   18925551.0 1892555.1     20.6      dT.bb += 0.5 * np.einsum("nafe,febnij->abij", H0.ab.ovvv + H.ab.ovvv, T.abb, optimize=True)
   349        10   27109428.0 2710942.8     29.4      dT.bb -= 0.25 * np.einsum("mnif,abfmjn->abij", H0.bb.ooov + H.bb.ooov, T.bbb, optimize=True)
   350        10   10429216.0 1042921.6     11.3      dT.bb -= 0.5 * np.einsum("nmfi,fabnmj->abij", H0.ab.oovo + H.ab.oovo, T.abb, optimize=True)
   351                                           
   352        20      46086.0   2304.3      0.1      T.bb, dT.bb = cc_loops2.cc_loops2.update_t2c(
   353        10      39612.0   3961.2      0.0          T.bb, dT.bb + 0.25 * H0.bb.vvoo, H0.b.oo, H0.b.vv, shift
   354                                               )
   355        10         16.0      1.6      0.0      return T, dT

Total time: 300.501 s
File: /home2/gururang/ccpy/ccpy/cc/ccsdt_p_v2.py
Function: update_t3a at line 357

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   357                                           @profile
   358                                           def update_t3a(T, dT, H, H0, shift, pspace):
   359                                               """
   360                                               Update t3a amplitudes by calculating the projection <ijkabc|(H_N e^(T1+T2+T3))_C|0>.
   361                                               """
   362                                               # <ijkabc | H(2) | 0 > + (VT3)_C intermediates
   363        10   37992370.0 3799237.0     12.6      I2A_vvov = H.aa.vvov - 0.5 * np.einsum("mnef,abfimn->abie", H0.aa.oovv, T.aaa, optimize=True)
   364        10   37879278.0 3787927.8     12.6      I2A_vvov -= np.einsum("mnef,abfimn->abie", H0.ab.oovv, T.aab, optimize=True)
   365                                           
   366        10   27068847.0 2706884.7      9.0      I2A_vooo = 0.5 * np.einsum("mnef,aefijn->amij", H0.aa.oovv, T.aaa, optimize=True)
   367        10   27063420.0 2706342.0      9.0      I2A_vooo += H.aa.vooo + np.einsum("mnef,aefijn->amij", H0.ab.oovv, T.aab, optimize=True)
   368        10      23228.0   2322.8      0.0      I2A_vooo -= np.einsum("me,aeij->amij", H.a.ov, T.aa, optimize=True)
   369                                           
   370                                               # MM(2,3)A
   371        10   11718126.0 1171812.6      3.9      dT.aaa = -0.25 * np.einsum("amij,bcmk->abcijk", I2A_vooo, T.aa, optimize=True)
   372                                               # (HBar*T3)_C
   373        10   50004019.0 5000401.9     16.6      dT.aaa -= (1.0 / 12.0) * np.einsum("mk,abcijm->abcijk", H.a.oo, T.aaa, optimize=True)
   374        10   52021400.0 5202140.0     17.3      dT.aaa += (1.0 / 24.0) * np.einsum("mnij,abcmnk->abcijk", H.aa.oooo, T.aaa, optimize=True)
   375                                           
   376        20   56730462.0 2836523.1     18.9      T.aaa, dT.aaa = ccp_loops.ccp_loops.update_t3a_p_opt1(
   377        10         21.0      2.1      0.0          dT.aaa, T.aa, T.aaa, T.aab,
   378        10         10.0      1.0      0.0          pspace,
   379        10         26.0      2.6      0.0          H.a.vv,
   380        10         24.0      2.4      0.0          H.aa.oovv, I2A_vvov, H.aa.voov, H.aa.vvvv,
   381        10         22.0      2.2      0.0          H.ab.oovv, H.ab.voov,
   382        10         39.0      3.9      0.0          H0.a.oo, H0.a.vv,
   383        10         18.0      1.8      0.0          shift
   384                                               )
   385        10         50.0      5.0      0.0      return T, dT

Total time: 748.086 s
File: /home2/gururang/ccpy/ccpy/cc/ccsdt_p_v2.py
Function: update_t3b at line 387

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   387                                           @profile
   388                                           def update_t3b(T, dT, H, H0, shift, pspace):
   389                                               """
   390                                               Update t3b amplitudes by calculating the projection <ijk~abc~|(H_N e^(T1+T2+T3))_C|0>.
   391                                               """
   392                                               # <ijk~abc~ | H(2) | 0 > + (VT3)_C intermediates
   393        10   40151175.0 4015117.5      5.4      I2A_vvov = -0.5 * np.einsum("mnef,abfimn->abie", H0.aa.oovv, T.aaa, optimize=True)
   394        10   37939050.0 3793905.0      5.1      I2A_vvov += -np.einsum("mnef,abfimn->abie", H0.ab.oovv, T.aab, optimize=True)
   395        10      58749.0   5874.9      0.0      I2A_vvov += H.aa.vvov
   396                                               
   397        10   29097977.0 2909797.7      3.9      I2A_vooo = 0.5 * np.einsum("mnef,aefijn->amij", H0.aa.oovv, T.aaa, optimize=True)
   398        10   27037348.0 2703734.8      3.6      I2A_vooo += np.einsum("mnef,aefijn->amij", H0.ab.oovv, T.aab, optimize=True)
   399        10      25853.0   2585.3      0.0      I2A_vooo += -np.einsum("me,aeij->amij", H.a.ov, T.aa, optimize=True)
   400        10       1549.0    154.9      0.0      I2A_vooo += H.aa.vooo
   401                                           
   402        10   37565528.0 3756552.8      5.0      I2B_vvvo = -0.5 * np.einsum("mnef,afbmnj->abej", H0.aa.oovv, T.aab, optimize=True)
   403        10   37644781.0 3764478.1      5.0      I2B_vvvo += -np.einsum("mnef,afbmnj->abej", H0.ab.oovv, T.abb, optimize=True)
   404        10     300317.0  30031.7      0.0      I2B_vvvo += H.ab.vvvo
   405                                               
   406        10   13245321.0 1324532.1      1.8      I2B_ovoo = 0.5 * np.einsum("mnef,efbinj->mbij", H0.aa.oovv, T.aab, optimize=True)
   407        10   13245369.0 1324536.9      1.8      I2B_ovoo += np.einsum("mnef,efbinj->mbij", H0.ab.oovv, T.abb, optimize=True)
   408        10      22695.0   2269.5      0.0      I2B_ovoo += -np.einsum("me,ecjk->mcjk", H.a.ov, T.ab, optimize=True)
   409        10       2781.0    278.1      0.0      I2B_ovoo += H.ab.ovoo
   410                                           
   411        10   33731240.0 3373124.0      4.5      I2B_vvov = -np.einsum("nmfe,afbinm->abie", H0.ab.oovv, T.aab, optimize=True)
   412        10   33814345.0 3381434.5      4.5      I2B_vvov += -0.5 * np.einsum("nmfe,afbinm->abie", H0.bb.oovv, T.abb, optimize=True)
   413        10      75884.0   7588.4      0.0      I2B_vvov += H.ab.vvov
   414                                               
   415        10   26423068.0 2642306.8      3.5      I2B_vooo = np.einsum("nmfe,afeinj->amij", H0.ab.oovv, T.aab, optimize=True)
   416        10   26427514.0 2642751.4      3.5      I2B_vooo += 0.5 * np.einsum("nmfe,afeinj->amij", H0.bb.oovv, T.abb, optimize=True)
   417        10      25890.0   2589.0      0.0      I2B_vooo += -np.einsum("me,aeik->amik", H.b.ov, T.ab, optimize=True)
   418        10       2079.0    207.9      0.0      I2B_vooo += H.ab.vooo
   419                                           
   420                                               # MM(2,3)B
   421        10   11720562.0 1172056.2      1.6      dT.aab = -0.5 * np.einsum("mcjk,abim->abcijk", I2B_ovoo, T.aa, optimize=True)
   422                                               #dT.aab += 0.5 * np.einsum("bcek,aeij->abcijk", I2B_vvvo, T.aa, optimize=True)
   423        10   23635176.0 2363517.6      3.2      dT.aab -= np.einsum("amik,bcjm->abcijk", I2B_vooo, T.ab, optimize=True)
   424                                               #dT.aab += np.einsum("acie,bejk->abcijk", I2B_vvov, T.ab, optimize=True)
   425        10   24764518.0 2476451.8      3.3      dT.aab -= 0.5 * np.einsum("amij,bcmk->abcijk", I2A_vooo, T.ab, optimize=True)
   426                                               #dT.aab += 0.5 * np.einsum("abie,ecjk->abcijk", I2A_vvov, T.ab, optimize=True)
   427                                           
   428                                               # (HBar*T3)_C
   429        10   44632768.0 4463276.8      6.0      dT.aab -= 0.5 * np.einsum("mi,abcmjk->abcijk", H.a.oo, T.aab, optimize=True)
   430        10   43023113.0 4302311.3      5.8      dT.aab -= 0.25 * np.einsum("mk,abcijm->abcijk", H.b.oo, T.aab, optimize=True)
   431                                               #dT.aab += 0.5 * np.einsum("ae,ebcijk->abcijk", H.a.vv, T.aab, optimize=True)
   432                                               #dT.aab += 0.25 * np.einsum("ce,abeijk->abcijk", H.b.vv, T.aab, optimize=True)
   433        10   54017516.0 5401751.6      7.2      dT.aab += 0.125 * np.einsum("mnij,abcmnk->abcijk", H.aa.oooo, T.aab, optimize=True)
   434        10   48787206.0 4878720.6      6.5      dT.aab += 0.5 * np.einsum("mnjk,abcimn->abcijk", H.ab.oooo, T.aab, optimize=True)
   435                                               #dT.aab += 0.125 * np.einsum("abef,efcijk->abcijk", H.aa.vvvv, T.aab, optimize=True)
   436                                               #dT.aab += 0.5 * np.einsum("bcef,aefijk->abcijk", H.ab.vvvv, T.aab, optimize=True)
   437                                               #dT.aab += np.einsum("amie,ebcmjk->abcijk", H.aa.voov, T.aab, optimize=True)
   438                                               #dT.aab += np.einsum("amie,becjmk->abcijk", H.ab.voov, T.abb, optimize=True)
   439                                               #dT.aab += 0.25 * np.einsum("mcek,abeijm->abcijk", H.ab.ovvo, T.aaa, optimize=True)
   440                                               #dT.aab += 0.25 * np.einsum("cmke,abeijm->abcijk", H.bb.voov, T.aab, optimize=True)
   441                                               #dT.aab -= 0.5 * np.einsum("amek,ebcijm->abcijk", H.ab.vovo, T.aab, optimize=True)
   442                                               #dT.aab -= 0.5 * np.einsum("mcie,abemjk->abcijk", H.ab.ovov, T.aab, optimize=True)
   443                                           
   444        20  140666427.0 7033321.3     18.8      T.aab, dT.aab = ccp_loops.ccp_loops.update_t3b_p_opt1(
   445        10         44.0      4.4      0.0          dT.aab, T.aa, T.ab, T.aaa, T.aab, T.abb,
   446        10         17.0      1.7      0.0          pspace,
   447        10         44.0      4.4      0.0          H.a.vv, H.b.vv,
   448        10         34.0      3.4      0.0          H.aa.oovv, I2A_vvov, H.aa.voov, H.aa.vvvv,
   449        10         39.0      3.9      0.0          H.ab.oovv, I2B_vvov, I2B_vvvo, H.ab.voov, H.ab.vovo, H.ab.ovov, H.ab.ovvo, H.ab.vvvv,
   450        10         25.0      2.5      0.0          H.bb.voov,
   451        10         59.0      5.9      0.0          H0.a.oo, H0.a.vv, H0.b.oo, H0.b.vv,
   452        10         30.0      3.0      0.0          shift
   453                                               )
   454        10         45.0      4.5      0.0      return T, dT

Total time: 736.8 s
File: /home2/gururang/ccpy/ccpy/cc/ccsdt_p_v2.py
Function: update_t3c at line 456

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   456                                           @profile
   457                                           def update_t3c(T, dT, H, H0, shift, pspace):
   458                                               """
   459                                               Update t3c amplitudes by calculating the projection <ij~k~ab~c~|(H_N e^(T1+T2+T3))_C|0>.
   460                                               """
   461                                               # <ij~k~ab~c~ | H(2) | 0 > + (VT3)_C intermediates
   462        10   39739713.0 3973971.3      5.4      I2B_vvvo = -0.5 * np.einsum("mnef,afbmnj->abej", H0.aa.oovv, T.aab, optimize=True)
   463        10   37605577.0 3760557.7      5.1      I2B_vvvo += -np.einsum("mnef,afbmnj->abej", H0.ab.oovv, T.abb, optimize=True)
   464        10     304551.0  30455.1      0.0      I2B_vvvo += H.ab.vvvo
   465                                               
   466        10   13686659.0 1368665.9      1.9      I2B_ovoo = 0.5 * np.einsum("mnef,efbinj->mbij", H0.aa.oovv, T.aab, optimize=True)
   467        10   13232362.0 1323236.2      1.8      I2B_ovoo += np.einsum("mnef,efbinj->mbij", H0.ab.oovv, T.abb, optimize=True)
   468        10       2914.0    291.4      0.0      I2B_ovoo += H.ab.ovoo
   469                                               
   470        10      20669.0   2066.9      0.0      I2B_ovoo -= np.einsum("me,ebij->mbij", H.a.ov, T.ab, optimize=True)
   471        10   35376707.0 3537670.7      4.8      I2B_vvov = -np.einsum("nmfe,afbinm->abie", H0.ab.oovv, T.aab, optimize=True)
   472        10   33811462.0 3381146.2      4.6      I2B_vvov += -0.5 * np.einsum("nmfe,afbinm->abie", H0.bb.oovv, T.abb, optimize=True)
   473        10      76346.0   7634.6      0.0      I2B_vvov += H.ab.vvov
   474                                               
   475        10   28143795.0 2814379.5      3.8      I2B_vooo = np.einsum("nmfe,afeinj->amij", H0.ab.oovv, T.aab, optimize=True)
   476        10   26424397.0 2642439.7      3.6      I2B_vooo += 0.5 * np.einsum("nmfe,afeinj->amij", H0.bb.oovv, T.abb, optimize=True)
   477        10       1999.0    199.9      0.0      I2B_vooo += H.ab.vooo
   478                                               
   479        10      26054.0   2605.4      0.0      I2B_vooo -= np.einsum("me,aeij->amij", H.b.ov, T.ab, optimize=True)
   480        10   37904735.0 3790473.5      5.1      I2C_vvov = -0.5 * np.einsum("mnef,abfimn->abie", H0.bb.oovv, T.bbb, optimize=True)
   481        10   25850560.0 2585056.0      3.5      I2C_vvov += -np.einsum("nmfe,fabnim->abie", H0.ab.oovv, T.abb, optimize=True)
   482        10      62087.0   6208.7      0.0      I2C_vvov += H.bb.vvov
   483                                               
   484        10    9516928.0 951692.8      1.3      I2C_vooo = np.einsum("nmfe,faenij->amij", H0.ab.oovv, T.abb, optimize=True)
   485        10   27070305.0 2707030.5      3.7      I2C_vooo += 0.5 * np.einsum("mnef,aefijn->amij", H0.bb.oovv, T.bbb, optimize=True)
   486        10      28917.0   2891.7      0.0      I2C_vooo -= np.einsum("me,cekj->cmkj", H.b.ov, T.bb, optimize=True)
   487        10       1376.0    137.6      0.0      I2C_vooo += H.bb.vooo
   488                                           
   489                                               # MM(2,3)C
   490        10   11713986.0 1171398.6      1.6      dT.abb = -0.5 * np.einsum("amij,bcmk->abcijk", I2B_vooo, T.bb, optimize=True)
   491                                               #dT.abb += 0.5 * np.einsum("abie,ecjk->abcijk", I2B_vvov, T.bb, optimize=True)
   492        10   29379781.0 2937978.1      4.0      dT.abb -= 0.5 * np.einsum("cmkj,abim->abcijk", I2C_vooo, T.ab, optimize=True)
   493                                               #dT.abb += 0.5 * np.einsum("cbke,aeij->abcijk", I2C_vvov, T.ab, optimize=True)
   494        10   15905349.0 1590534.9      2.2      dT.abb -= np.einsum("mbij,acmk->abcijk", I2B_ovoo, T.ab, optimize=True)
   495                                               #dT.abb += np.einsum("abej,ecik->abcijk", I2B_vvvo, T.ab, optimize=True)
   496                                           
   497                                               # (HBar*T3)_C
   498        10   52204357.0 5220435.7      7.1      dT.abb -= 0.25 * np.einsum("mi,abcmjk->abcijk", H.a.oo, T.abb, optimize=True)
   499        10   50552442.0 5055244.2      6.9      dT.abb -= 0.5 * np.einsum("mj,abcimk->abcijk", H.b.oo, T.abb, optimize=True)
   500                                               #dT.abb += 0.25 * np.einsum("ae,ebcijk->abcijk", H.a.vv, T.abb, optimize=True)
   501                                               #dT.abb += 0.5 * np.einsum("be,aecijk->abcijk", H.b.vv, T.abb, optimize=True)
   502        10   55680608.0 5568060.8      7.6      dT.abb += 0.125 * np.einsum("mnjk,abcimn->abcijk", H.bb.oooo, T.abb, optimize=True)
   503        10   51998219.0 5199821.9      7.1      dT.abb += 0.5 * np.einsum("mnij,abcmnk->abcijk", H.ab.oooo, T.abb, optimize=True)
   504                                               #dT.abb += 0.125 * np.einsum("bcef,aefijk->abcijk", H.bb.vvvv, T.abb, optimize=True)
   505                                               #dT.abb += 0.5 * np.einsum("abef,efcijk->abcijk", H.ab.vvvv, T.abb, optimize=True)
   506                                               #dT.abb += 0.25 * np.einsum("amie,ebcmjk->abcijk", H.aa.voov, T.abb, optimize=True)
   507                                               #dT.abb += 0.25 * np.einsum("amie,ebcmjk->abcijk", H.ab.voov, T.bbb, optimize=True)
   508                                               #dT.abb += np.einsum("mbej,aecimk->abcijk", H.ab.ovvo, T.aab, optimize=True)
   509                                               #dT.abb += np.einsum("bmje,aecimk->abcijk", H.bb.voov, T.abb, optimize=True)
   510                                               #dT.abb -= 0.5 * np.einsum("mbie,aecmjk->abcijk", H.ab.ovov, T.abb, optimize=True)
   511                                               #dT.abb -= 0.5 * np.einsum("amej,ebcimk->abcijk", H.ab.vovo, T.abb, optimize=True)
   512                                           
   513        20  140477250.0 7023862.5     19.1      T.abb, dT.abb = ccp_loops.ccp_loops.update_t3c_p_opt1(
   514        10         48.0      4.8      0.0          dT.abb, T.ab, T.bb, T.aab, T.abb, T.bbb,
   515        10         19.0      1.9      0.0          pspace,
   516        10         42.0      4.2      0.0          H.a.vv, H.b.vv,
   517        10         22.0      2.2      0.0          H.aa.voov,
   518        10         49.0      4.9      0.0          H.ab.oovv, I2B_vvov, I2B_vvvo, H.ab.voov, H.ab.vovo, H.ab.ovov, H.ab.ovvo, H.ab.vvvv,
   519        10         36.0      3.6      0.0          H.bb.oovv, I2C_vvov, H.bb.voov, H.bb.vvvv,
   520        10         48.0      4.8      0.0          H0.a.oo, H0.a.vv, H0.b.oo, H0.b.vv,
   521        10         26.0      2.6      0.0          shift
   522                                               )
   523        10         49.0      4.9      0.0      return T, dT

Total time: 269.634 s
File: /home2/gururang/ccpy/ccpy/cc/ccsdt_p_v2.py
Function: update_t3d at line 526

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   526                                           @profile
   527                                           def update_t3d(T, dT, H, H0, shift, pspace):
   528                                               """
   529                                               Update t3d amplitudes by calculating the projection <i~j~k~a~b~c~|(H_N e^(T1+T2+T3))_C|0>.
   530                                               """
   531                                               #  <i~j~k~a~b~c~ | H(2) | 0 > + (VT3)_C intermediates
   532        10   37904597.0 3790459.7     14.1      I2C_vvov = -0.5 * np.einsum("mnef,abfimn->abie", H0.bb.oovv, T.bbb, optimize=True)
   533        10   26497235.0 2649723.5      9.8      I2C_vvov -= np.einsum("nmfe,fabnim->abie", H0.ab.oovv, T.abb, optimize=True)
   534        10      59500.0   5950.0      0.0      I2C_vvov += H.bb.vvov
   535                                               
   536        10   27072364.0 2707236.4     10.0      I2C_vooo = 0.5 * np.einsum("mnef,aefijn->amij", H0.bb.oovv, T.bbb, optimize=True)
   537        10    9408186.0 940818.6      3.5      I2C_vooo += np.einsum("nmfe,faenij->amij", H0.ab.oovv, T.abb, optimize=True)
   538        10      27350.0   2735.0      0.0      I2C_vooo -= np.einsum("me,aeij->amij", H.b.ov, T.bb, optimize=True)
   539        10       1413.0    141.3      0.0      I2C_vooo += H.bb.vooo
   540                                           
   541                                               # MM(2,3)D
   542        10   11717983.0 1171798.3      4.3      dT.bbb = -0.25 * np.einsum("amij,bcmk->abcijk", I2C_vooo, T.bb, optimize=True)
   543                                               #dT.bbb += 0.25 * np.einsum("abie,ecjk->abcijk", I2C_vvov, T.bb, optimize=True)
   544                                               # (HBar*T3)_C
   545        10   50027883.0 5002788.3     18.6      dT.bbb -= (1.0 / 12.0) * np.einsum("mk,abcijm->abcijk", H.b.oo, T.bbb, optimize=True)
   546                                               #dT.bbb += (1.0 / 12.0) * np.einsum("ce,abeijk->abcijk", H.b.vv, T.bbb, optimize=True)
   547        10   52038026.0 5203802.6     19.3      dT.bbb += (1.0 / 24.0) * np.einsum("mnij,abcmnk->abcijk", H.bb.oooo, T.bbb, optimize=True)
   548                                               #dT.bbb += (1.0 / 24.0) * np.einsum("abef,efcijk->abcijk", H.bb.vvvv, T.bbb, optimize=True)
   549                                               #dT.bbb += 0.25 * np.einsum("maei,ebcmjk->abcijk", H.ab.ovvo, T.abb, optimize=True)
   550                                               #dT.bbb += 0.25 * np.einsum("amie,ebcmjk->abcijk", H.bb.voov, T.bbb, optimize=True)
   551                                           
   552        20   54879373.0 2743968.6     20.4      T.bbb, dT.bbb = ccp_loops.ccp_loops.update_t3d_p_opt1(
   553        10         34.0      3.4      0.0          dT.bbb, T.bb, T.abb, T.bbb,
   554        10         15.0      1.5      0.0          pspace,
   555        10         36.0      3.6      0.0          H.b.vv,
   556        10         37.0      3.7      0.0          H.ab.oovv, H.ab.ovvo,
   557        10         36.0      3.6      0.0          H.bb.oovv, I2C_vvov, H.bb.voov, H.bb.vvvv,
   558        10         36.0      3.6      0.0          H0.b.oo, H0.b.vv,
   559        10         21.0      2.1      0.0          shift
   560                                               )
   561        10         47.0      4.7      0.0      return T, dT

